name: Actions Workflow

# on: [push] # on means when should be the workflow triggered, in this case only on push
on: # multiple events can be specified
  # push:
  repository_dispatch: # https://docs.github.com/en/rest/repos/repos#create-a-repository-dispatch-event
    # trigger action based on POST request to special github url
    types: [build]
  # schedule:
    # minimum is every 5 min, you cant ran every minute
    # - cron: "* * * * *" # min hour dayofmonth month dayofweek; check crontab guru
    # - cron: "0/5 * * * *" # every 5 minutes
    # - cron: "0/6 * * * *" # every 6 minutes
  pull_request: # pri PR workflow bude bezat na temporary branchi ktora je vysledkom mergu source a target branche e.g. feature => master
    # bude bezat v zmysle ze pri checkoute codu sa nastavi ta temp brancha
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
    # !!! When you merge a pull request, it's as if you are doing a push to the repository branch. Therefore the push event will be triggered. There is no specific event for a merge.
    types: [opened, closed, assigned, reopened]

jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: show payload from dispatch event
        run: echo ${{ github.event.client_payload }}
      - name: List files
        run: |
          pwd
          ls -la
      - name: List env vars
        run: |
          echo $GITHUB_SHA # commit id that triggered the workflow
          echo $GITHUB_REPOSITORY 
          echo $GITHUB_WORKSPACE # pwd directory
          echo "${{ github.token }}" # token to authenticate to github
          # git clone git@github:$GITHUB_REPOSITORY
          # git checkout $GITHUB_SHA
      - name: Checkout # checkout this repo with commit that triggered this workflow
        uses: actions/checkout@v1
      - name: List files after checkout
        run: |
          pwd
          ls -la
      - name: Simple JS Action
        id: greet # use id to reference in later step
        # action is some reusable code/program, we can use for some purpose
        # uses: actions/hello-world-javascript-action@master # user/repo@branch
        # uses: actions/hello-world-javascript-action@<commitid> # user/repo@commit
        uses: actions/hello-world-javascript-action@v1 # user/repo@version
        with: # provide inputs
          who-to-greet: Daniel
      - name: Log Greeting Time
        run: echo "${{ steps.greet.outputs.time }}"
